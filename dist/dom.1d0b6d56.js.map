{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","textContent","innerText","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"../src","sourcesContent":["window.dom = {\n  //创建节点\n  create(string) {\n    const container = document.createElement(\"template\");\n    container.innerHTML = string.trim();\n    return container.content.firstChild;\n  },\n  //在节点后面插入节点\n  after(node, node2) {\n    node.parentNode.insertBefore(node2, node.nextSibling);\n  },\n  //在节点前面插入节点\n  before(node, node2) {\n    node.parentNode.insertBefore(node2, node);\n  },\n  //新增子节点\n  append(parent, node) {\n    parent.appendChild(node);\n  },\n  //新增父亲节点\n  wrap(node, parent) {\n    dom.before(node, parent);\n    dom.append(parent, node);\n  },\n  //删除节点\n  remove(node) {\n    node.parentNode.removeChild(node);\n    return node;\n  },\n  //删除节点的所有子节点\n  empty(node) {\n    const { childNodes } = node; // const childNodes = node.childNodes\n    const array = [];\n    let x = node.firstChild;\n    while (x) {\n      array.push(dom.remove(firstChild));\n      x = node.firstChild;\n    }\n  },\n  //修改属性\n  attr(node, name, value) {\n    // 重载\n    if (arguments.length === 3) {\n      node.setAttribute(name, value);\n    } else if (arguments.length === 2) {\n      return node.getAttribute(name);\n    }\n  },\n  //修改文本内容\n  text(node, string) {\n    // 适配\n    if (arguments.length === 2) {\n      if (\"innerText\" in node) {\n        node.innerHTML = string;\n      } else {\n        node.textContent = string;\n      }\n    } else if (arguments.length === 1) {\n      if (\"innerText\" in node) {\n        return node.innerText;\n      } else {\n        return node.textContent;\n      }\n    }\n  },\n\n  html(node, string) {\n    if (arguments.length === 2) {\n      node.innerHTML = string;\n    } else if (arguments.length === 1) {\n      return node.innerHTML;\n    }\n  },\n  // 修改style属性\n  style(node, name, value) {\n    if (arguments.length === 3) {\n      //dom.style()\n      node.style[name] = value;\n    } else if (arguments.length === 2) {\n      if (typeof name === \"string\") {\n        //dom.style(div,'color')\n        return node.style[name];\n      } else if (name instanceof Object) {\n        //dom.style(div, {color: 'red'})\n        const object = name;\n        for (let key in object) {\n          node.style[key] = object[key];\n        }\n      }\n    }\n  },\n  //添加class\n  class: {\n    add(node, className) {\n      node.classList.add(className);\n    },\n    remove(node, className) {\n      node.classList.remove(className);\n    },\n    has(node, className) {\n      return node.classList.contains(className);\n    },\n  },\n  //添加onclick事件\n  on(node, eventName, fn) {\n    node.addEventListener(eventName, fn);\n  },\n  //删除onclick事件\n  off(node, eventName, fn) {\n    node.removeEventListener(eventName, fn);\n  },\n  //通过元素名，获取整个标签\n  find(selector, scope) {\n    return (scope || document).querySelectorAll(selector);\n  },\n  //找到父亲节点\n  parent(node) {\n    return node.parentNode;\n  },\n  //找到子节点\n  children(node) {\n    return node.children;\n  },\n  //找到兄弟节点\n  siblings(node) {\n    return Array.from(node.parentNode.children).filter((n) => n !== node);\n  },\n  //返回下一个节点\n  next(node) {\n    let x = node.nextSibling;\n    while (x && x.nodeType === 3) {\n      x = x.nextSibling;\n    }\n    return x;\n  },\n  //返回上一个节点\n  previous(node) {\n    let x = node.previousSibling;\n    while (x && x.nodeType === 3) {\n      x = x.previousSibling;\n    }\n    return x;\n  },\n  //遍历所有节点\n  each(nodeList, fn) {\n    for (let i = 0; i < nodeList.length; i++) {\n      fn.call(null, nodeList[i]);\n    }\n  },\n  //获取元素排第几\n  index(node) {\n    const list = dom.children(node.parentNode);\n    let i;\n    for (i = 0; i < list.length; i++) {\n      if (list[i] === node) {\n        break;\n      }\n    }\n    return i;\n  },\n};\n"]}